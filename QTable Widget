#!/usr/bin/env python

from PyQt4 import QtGui,QtCore
from exercise2 import load_file
from ui_Excercise3 import Ui_Excercise3
import sys

class Exercise3GUI(QtGui.QMainWindow):
    def __init__(self):
        QtGui.QMainWindow.__init__(self)
        self.ui = Ui_Excercise3()
        self.ui.setupUi(self)
        self.connect(self.ui.pushButton,QtCore.SIGNAL('clicked(bool)'),self.DoAction)

    def setData(self,data):
        rows = data
        #print('data has %s rows: %s'%(len(data),data))
        print 'data has ',len(data),' rows:\n',data

        #SETUP_TABLE_TO_HAVE_X_ROWS_AND_Y_COLUMNS
        
        #self.ui.tableWidget.setRowCount(len(data))
        self.ui.tableWidget.setColumnCount(len(data[0])) 

        for x in range(len(data)):
            columns = data[x]
            self.ui.tableWidget.insertRow(x)
            for y in range(len(columns)):
                #self.ui.tableWidget. ... (data[x][y])

                pass

    def DoAction(self, arg = None):
        pass
    def writeCsv(self, ui_Excercise3):pass

def wait_until_user_exits():
    sys.exit(app.exec_())
 
def get_main_window(file_name):
    # This is the function to be called from __main__
    data = load_file(file_name)
    table = Exercise3GUI()
    table.setData(data)
    table.show()  #shows the data
    return table

if __name__ == '__main__':
    '''
    4th, Implement the code for the widget. The widget should load the .csv 
    file previously saved using the code you wrote in step 2 and then 
    display it in the Table widget.
    '''
    #Preparation
    app = QtGui.QApplication([]) #application is created

    #Exercise
    if len(sys.argv) < 2:
        print "You must pass an argument, the right usage is:\n\tpython %s <file_name>.csv" % (sys.argv[0]) #validation to correctly enter the file
        print "" 
        #exit()
    else:
        file_name = sys.argv[1] #extract 
        table_widget = get_main_window(file_name)
        wait_until_user_exits()
